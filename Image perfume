#include <tcs3200.h>
int s0=3,s1=4,s2=5,s3=6;
int out=2;
int flag=0;
byte counter=0;
int countR=0,countG=0,countB=0;

int solenoid1 = 8;
int solenoid2 = 9;
int solenoid3 = 10;


const int buttonPin = 7;
int buttonState = LOW;


int prevButtonState = LOW;

void setup() {
 Serial.begin(115200);
 pinMode(s0,OUTPUT);
 pinMode(s1,OUTPUT);
 pinMode(s2,OUTPUT);
 pinMode(s3,OUTPUT);
 pinMode(buttonPin, INPUT);
 pinMode(solenoid1,OUTPUT);
 pinMode(solenoid2,OUTPUT);
 pinMode(solenoid3,OUTPUT);
 
}

void TCS()
 {
 flag=0;
 digitalWrite(s1,HIGH);
 digitalWrite(s0,HIGH);
 digitalWrite(s2,LOW);
 digitalWrite(s3,LOW);
 attachInterrupt(0, ISR_INTO, CHANGE);
 timer0_init();
 }
 
void ISR_INTO()
 {
 counter++;
 }
 void timer0_init(void)
 {
  TCCR2A=0x00;
  TCCR2B=0x07;   //the clock frequency source 1024 points
  TCNT2= 10;    //10 ms overflow again
  TIMSK2 = 0x01; //allow interrupt
 }
 int i=0;
 ISR(TIMER2_OVF_vect)//the timer 2, 10ms interrupt overflow again. Internal overflow interrupt executive function
{
    TCNT2=100;
    flag++;
 if(flag==1)
  {
    countR=counter;
    Serial.print("red=");
    Serial.println(countR,DEC);
    digitalWrite(s2,HIGH);
    digitalWrite(s3,HIGH);
  }
  else if(flag==2)
   {
    countG=counter;
    Serial.print("green=");
    Serial.println(countG,DEC);
    digitalWrite(s2,LOW);
    digitalWrite(s3,HIGH);
   }
   else if(flag==3)
    {
    countB=counter;
    Serial.print("blue=");
    Serial.println(countB,DEC);
    Serial.println("\n");
    digitalWrite(s2,LOW);
    digitalWrite(s3,LOW);
 
    }
    else if(flag==4)
     {
     flag=0;
     }
       counter=0;
}

void push_button(int solenoidPin)
{
 digitalWrite(solenoidPin, HIGH);
 delay(1000);
 digitalWrite(solenoidPin, LOW);
 delay(500);
}

void loop() {
  
buttonState = digitalRead(buttonPin);

  if ((prevButtonState == LOW)&&(buttonState == HIGH))
  {
TCS();
Serial.println("on");
 for(int i=0; i<countR; i+=120)
{push_button(solenoid1);}

 for(int j=0; j<countG; j+=120)
{push_button(solenoid2);}

 for(int k=0; k<countB; k+=120)
{push_button(solenoid3);}
  }

  else
  {Serial.println("off");}
  
prevButtonState = buttonState;
}
